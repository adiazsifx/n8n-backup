{"createdAt":"2025-05-09T21:29:29.902Z","updatedAt":"2025-05-10T23:22:33.000Z","id":"RHJe5m7YBVNF1fyK","name":"Flujo SincroGit","active":false,"nodes":[{"parameters":{},"name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-880,-160],"typeVersion":1,"id":"05f7622b-967a-40f4-b458-4395b804261e"},{"parameters":{"functionCode":"const newItems = [];\nfor (item of items[0].json.data) {\n  newItems.push({json: item});\n}\nreturn newItems;"},"name":"dataArray","type":"n8n-nodes-base.function","position":[-440,0],"typeVersion":1,"id":"4a257697-e87e-446a-bc5a-afd88eacf0ff"},{"parameters":{"url":"http://192.168.2.12:5678/api/v1/workflows","options":{},"headerParametersUi":{"parameter":[{"name":"X-N8N-API-KEY","value":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3MzM0NmQxMy02MDE1LTQ5NTEtOGI2My0zOWViMzY1ZGZmMjQiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzQ2ODI3MzAyfQ.3gvRIHjSmy-pLtUOtJccJRZ5CIaz2VDILm2rWn3bfMo"}]},"queryParametersUi":{"parameter":[{"name":"active","value":"true"}]}},"name":"N8N Workflows","type":"n8n-nodes-base.httpRequest","position":[-580,0],"typeVersion":1,"id":"4bec90fd-a56e-4708-81af-d1238551fc4b"},{"parameters":{"resource":"file","operation":"get","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json","asBinaryProperty":false,"additionalParameters":{}},"name":"GitHub","type":"n8n-nodes-base.github","position":[40,0],"typeVersion":1,"alwaysOutputData":true,"id":"2f4b1de2-f8ac-46c4-8d6c-f3b56dd365f4","webhookId":"3945e000-3de1-4607-9337-d8c105baf917","credentials":{"githubApi":{"id":"f2tIhmKxTLkygd54","name":"GitHub account"}},"continueOnFail":true},{"parameters":{},"name":"Merge","type":"n8n-nodes-base.merge","position":[200,180],"typeVersion":1,"id":"b8ce353c-8be4-4456-a6ac-d338f4611a04"},{"parameters":{"url":"=http://192.168.2.12:5678/api/v1/workflows/{{$json[\"id\"]}}","options":{},"headerParametersUi":{"parameter":[{"name":"X-N8N-API-KEY","value":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3MzM0NmQxMy02MDE1LTQ5NTEtOGI2My0zOWViMzY1ZGZmMjQiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzQ2ODI3MzAyfQ.3gvRIHjSmy-pLtUOtJccJRZ5CIaz2VDILm2rWn3bfMo"}]}},"name":"N8N Workflow Detail","type":"n8n-nodes-base.httpRequest","position":[40,340],"typeVersion":1,"id":"0f115967-89eb-412d-9f5e-617344ffa4af"},{"parameters":{"dataType":"string","value1":"={{$json[\"github_status\"]}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"name":"github_status","type":"n8n-nodes-base.switch","position":[500,180],"typeVersion":1,"id":"f28ec723-ad26-46d9-94ca-460145c12a34"},{"parameters":{},"name":"same","type":"n8n-nodes-base.noOp","position":[620,-260],"typeVersion":1,"id":"f6c6d536-734a-4ea1-805c-8c4a570efc0d"},{"parameters":{},"name":"different","type":"n8n-nodes-base.noOp","position":[820,80],"typeVersion":1,"id":"9d5eb586-9762-4428-bb45-9f114b7bf1af"},{"parameters":{},"name":"new","type":"n8n-nodes-base.noOp","position":[700,340],"typeVersion":1,"id":"cceede80-47b4-407e-b151-aa819808cd51"},{"parameters":{"resource":"file","operation":"edit","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"N8N Workflow Detail\"].json[\"data\"][\"name\"]}}.json","fileContent":"={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}","commitMessage":"=[N8N Backup] {{$node[\"N8N Workflow Detail\"].json[\"data\"][\"name\"]}}.json ({{$json[\"github_status\"]}})"},"name":"GitHub Edit","type":"n8n-nodes-base.github","position":[980,-200],"typeVersion":1,"id":"6cb9ee09-f8b6-4671-b5bb-3942c6c07b21","webhookId":"b9e9219d-fe1f-47e9-815c-347e7da48caa","credentials":{"githubApi":{"id":"f2tIhmKxTLkygd54","name":"GitHub account"}}},{"parameters":{"resource":"file","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"N8N Workflow Detail\"].json[\"data\"][\"name\"]}}.json","fileContent":"={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}","commitMessage":"=[N8N Backup] {{$node[\"N8N Workflow Detail\"].json[\"data\"][\"name\"]}}.json ({{$json[\"github_status\"]}})"},"name":"GitHub Create","type":"n8n-nodes-base.github","position":[900,340],"typeVersion":1,"id":"37c6dd35-bfc8-4600-99e5-efe8d1c3c67d","webhookId":"11e5e381-c2ba-4a49-b0ba-627a7e7eda11","credentials":{"githubApi":{"id":"f2tIhmKxTLkygd54","name":"GitHub account"}}},{"parameters":{"functionCode":"// File Returned with Content\nif (Object.keys(items[0].json).includes(\"jsCode\")) {\n  // Get JSON Objects\n  var origWorkflow = eval(\"(\"+Buffer.from(items[0].json.content, 'base64').toString()+\")\");\n  var n8nWorkflow = (items[1].json.data);\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    items[0].json.github_status = \"same\";\n    items[0].json.content_decoded = orderedOriginal;\n  } else {\n    items[0].json.github_status = \"different\";\n    items[0].json.content_decoded = orderedOriginal;\n    items[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = (items[1].json.data);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  items[0].json.github_status = \"new\";\n  items[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn items;"},"name":"isDiffOrNew","type":"n8n-nodes-base.function","position":[360,180],"typeVersion":1,"id":"3f46b1df-75a7-4cb5-89a6-06ad7040bb20"},{"parameters":{"triggerTimes":{"item":[{"hour":20,"minute":11}]}},"name":"Daily @ 20:00","type":"n8n-nodes-base.cron","position":[-880,140],"typeVersion":1,"id":"58df21aa-0bb2-49e5-b36c-c3fe7f5e1b23"},{"parameters":{"batchSize":1,"options":{}},"name":"OneAtATime","type":"n8n-nodes-base.splitInBatches","position":[-140,0],"typeVersion":1,"id":"4a9adec7-2a4d-4369-b1a4-30ae73f5fc9e"},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"octocat"},{"name":"repo.name","value":"Hello-World"},{"name":"repo.path","value":"my-team/n8n/workflows/"}]},"options":{}},"name":"Globals","type":"n8n-nodes-base.set","position":[-740,0],"typeVersion":1,"id":"b4a834cd-1bb0-4bda-a9e4-88367baa745d"},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"a3c5ca10-4a58-4971-9f9c-298499f00b18","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-180,740],"typeVersion":1},{"parameters":{},"id":"a9c07c80-74c2-4069-b016-9c6a17332b5e","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-120,1080],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"fa54fcfe-49e0-4b71-a4d6-bd93a51c3df9","name":"n8n","type":"n8n-nodes-base.n8n","position":[1420,200],"typeVersion":1,"credentials":{"n8nApi":{"id":"RAjEKQVyUx82fXuD","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"1b2e7695-0a19-41c7-aa1e-dc90bc743255","name":"Return","type":"n8n-nodes-base.set","position":[1540,900],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"a18b8c30-d67a-4815-b333-b463ab414a40","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[500,780],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"f827b1a7-6741-457e-ac95-6e7c77623177","name":"If file too large","type":"n8n-nodes-base.if","position":[260,800],"typeVersion":2},{"parameters":{},"id":"f064265a-6b3f-49d6-ae57-ef4ecf0d6ac0","name":"Merge Items","type":"n8n-nodes-base.merge","position":[260,1060],"typeVersion":2},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"d164d3f6-8191-4ed4-84db-1203a273b371","name":"Check Status","type":"n8n-nodes-base.switch","position":[860,1060],"typeVersion":1},{"parameters":{},"id":"4761543e-1341-4144-a1ca-0ff8ed78e698","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1080,900],"typeVersion":1},{"parameters":{},"id":"10805f7f-0425-4a33-bb9e-ce033214f503","name":"File is different","type":"n8n-nodes-base.noOp","position":[1080,1060],"typeVersion":1},{"parameters":{},"id":"3ec6be6b-07ba-4dd6-8ddf-9488e3517510","name":"File is new","type":"n8n-nodes-base.noOp","position":[1080,1260],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"e79e6973-32c4-4f9c-8c4b-077c07e3203b","name":"Create new file","type":"n8n-nodes-base.github","position":[1300,1260],"typeVersion":1,"webhookId":"ff344a24-17cb-4e9e-bad5-bbd10e65f12b","credentials":{"githubApi":{"id":"f2tIhmKxTLkygd54","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"d1dd7afa-a908-4073-bce9-e48c7c7df123","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1300,1060],"typeVersion":1,"webhookId":"359e40ad-e492-4541-9372-19a6aa3f2779","credentials":{"githubApi":{"id":"f2tIhmKxTLkygd54","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"81461583-244b-46f5-b8db-0638fc284ac6","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1680,200],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"940e1eee-04cf-4a7a-94bc-285a4de0df86","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[1200,200],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"ad9884b8-5efe-4f6b-b675-424cecc977bd","name":"Create sub path","type":"n8n-nodes-base.set","position":[660,1060],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"282c12b7-d00f-484d-81ee-c600ac170cf6","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-580,740],"typeVersion":1},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"a9f6f492-815a-4c6c-a607-f5992b6988da","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1900,220],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"8540ce4f-de92-44ea-9d76-3c218db5b3a3","name":"Get file data","type":"n8n-nodes-base.github","position":[60,800],"typeVersion":1,"alwaysOutputData":true,"webhookId":"fbdb9fca-cdf0-47a6-93cd-4ff17e07d2ae","credentials":{"githubApi":{"id":"f2tIhmKxTLkygd54","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"8754a314-d95c-4761-8686-d771dce3f383","name":"Config","type":"n8n-nodes-base.set","position":[60,1080],"typeVersion":3.4},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"543d6a19-5145-4d36-ac21-e6a54a529df3","name":"isDiffOrNew1","type":"n8n-nodes-base.code","position":[460,1060],"typeVersion":1}],"connections":{"new":{"main":[[{"node":"GitHub Create","type":"main","index":0}]]},"same":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"Merge":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Globals":{"main":[[{"node":"N8N Workflows","type":"main","index":0}]]},"dataArray":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"different":{"main":[[{"node":"GitHub Edit","type":"main","index":0}]]},"OneAtATime":{"main":[[{"node":"GitHub","type":"main","index":0},{"node":"N8N Workflow Detail","type":"main","index":0}]]},"GitHub Edit":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"github_status","type":"main","index":0}]]},"Daily @ 20:00":{"main":[[{"node":"Globals","type":"main","index":0}]]},"GitHub Create":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"N8N Workflows":{"main":[[{"node":"dataArray","type":"main","index":0}]]},"github_status":{"main":[[{"node":"same","type":"main","index":0}],[{"node":"different","type":"main","index":0}],[{"node":"new","type":"main","index":0}]]},"N8N Workflow Detail":{"main":[[{"node":"Merge","type":"main","index":1}]]},"On clicking 'execute'":{"main":[[{"node":"Globals","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew1","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]},"isDiffOrNew1":{"main":[[{"node":"Create sub path","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ecc033b2-85bf-4575-bf25-7175abd5c243","triggerCount":0,"tags":[]}